name: CI
on:
  workflow_dispatch:
    inputs:
      change_type:
        description: 'Version (breaking, major, minor, patch)'
        default: 'patch'
        required: true
jobs:
  build_apk:
    name: Create release
    runs-on: macos-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2
          
        - name: tags
          run: |
            git fetch --tags  
        - name: Install Flutter
          uses: subosito/flutter-action@v1.4.0
        
        - name: Install release tooling
          uses: actions/setup-go@v2.1.3

        - name: go info
          shell: bash
          run: |          
            echo $(go version) at $(which go)
            echo go version: $(go version)
            echo go env: $(go env GOPATH) 
            echo $(go env GOPATH)/bin >> $GITHUB_PATH
        - name: Install project dependencies
          run: |
            GO111MODULE=on go get github.com/git-chglog/git-chglog/cmd/git-chglog
            flutter pub global activate derry
            flutter pub global activate cider
            flutter pub get
            cd $(go env GOPATH)/bin && ls
        - id: version
          name: Version 
          run: |
            echo "${{github.event.inputs.change_type}}"
            flutter pub global run cider bump "${{github.event.inputs.change_type}}"
            VERSION=$(flutter pub global run cider version) 
            echo "::set-output name=version::${VERSION}"
            
        - id: changelog
          name: Generate changelog
          run: |
            echo "Generating changelog for ${{steps.version.outputs.version}}"
            git-chglog --next-tag ${{steps.version.outputs.version}} 
            git-chglog --next-tag ${{steps.version.outputs.version}} -o CHANGELOG.md
            
        - name: Commit changes
          run: |
              git config user.name github-actions
              git config user.email github-actions@github.com
              git add .
              git commit -m "bump release & update changelog"
              git push
        
        - name: Release  
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with: 
            tag_name: v${{steps.version.outputs.version}}
            release_name: v${{steps.version.outputs.version}}
            body: |
              ${{ steps.changelog.outputs.release_body }}
            
